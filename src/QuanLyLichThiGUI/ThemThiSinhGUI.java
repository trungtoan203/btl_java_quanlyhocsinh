/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package QuanLyLichThiGUI;

import QuanLyLichThiGUI.ThiSinhGUI;
import Model.LichThi;
import Model.HocSinh;
import static Engine.DBLichThiEngine.SVFromFile;
import static Engine.DBLichThiEngine.getListSVById;
import static Engine.DBLichThiEngine.writeFile;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 
 */
public class ThemThiSinhGUI extends javax.swing.JFrame {

    /**
     * Creates new form ThemThiSinhGUI
     */
    List<HocSinh> listHS;
    List<String> listMHS;
    List<LichThi> listLichThi;
    LichThi lichthi;
    static DefaultTableModel tbHocSinh;
    static String fileName = "src/SavedData/DSLichThi.txt";
    static String fileHS = "src/SavedData/DSHocSinh.txt";
    private ThiSinhGUI tsScreen;
    private HocSinh searchHS;

    public ThemThiSinhGUI(List listMaSV, LichThi lichthiFromParent, List<LichThi> list, ThiSinhGUI tsScreen) {
        initComponents();
        setLocationRelativeTo(null);
        lichthi = lichthiFromParent;
        listHS = new ArrayList<>();
        listLichThi = list;
        listMHS = listMaSV;
        this.tsScreen = tsScreen;
        tbHocSinh = (DefaultTableModel) tableHocSinh.getModel();
        try {
            listHS = SVFromFile(fileHS);
        } catch (Exception ex) {
            System.out.println(ex.toString());
        }
        showTableData();
    }

    public ThemThiSinhGUI() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableHocSinh = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtMaSV = new javax.swing.JTextField();
        btnThemThiSinh1 = new javax.swing.JButton();
        btnHuyThem = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Thêm thí sinh");

        tableHocSinh.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tableHocSinh.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã học sinh", "Họ tên", "Giới tính", "Lớp", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableHocSinh);
        if (tableHocSinh.getColumnModel().getColumnCount() > 0) {
            tableHocSinh.getColumnModel().getColumn(1).setMinWidth(200);
        }

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Tìm học sinh theo mã");

        txtMaSV.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMaSVKeyPressed(evt);
            }
        });

        btnThemThiSinh1.setBackground(new java.awt.Color(0, 158, 15));
        btnThemThiSinh1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnThemThiSinh1.setForeground(new java.awt.Color(255, 255, 255));
        btnThemThiSinh1.setText("Thêm thí sinh");
        btnThemThiSinh1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemThiSinh1ActionPerformed(evt);
            }
        });

        btnHuyThem.setBackground(new java.awt.Color(255, 153, 0));
        btnHuyThem.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnHuyThem.setForeground(new java.awt.Color(255, 255, 255));
        btnHuyThem.setText("Hủy");
        btnHuyThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyThemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 585, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(47, 47, 47))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(268, 268, 268))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnHuyThem)
                        .addGap(27, 27, 27)
                        .addComponent(btnThemThiSinh1)
                        .addGap(219, 219, 219))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThemThiSinh1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHuyThem, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemThiSinh1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemThiSinh1ActionPerformed
        int[] selectedRows = tableHocSinh.getSelectedRows();
        if (selectedRows.length <= 0) {
            JOptionPane.showMessageDialog(this, "Hãy chọn ít nhất một dòng để thêm!", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
        } else {
            int confirm = JOptionPane.showConfirmDialog(this, "Thêm những học sinh đã chọn", "Xác nhận thêm", JOptionPane.INFORMATION_MESSAGE);
            if (searchHS == null) {
                if (confirm == JOptionPane.YES_OPTION) {
                    for (int row : selectedRows) {
                        for (LichThi lich : listLichThi) {
                            if (lich.equals(lichthi)) {
                                lich.themHS(listHS.get(row).getMaHS());
                            }
                        }
                    }
                    JOptionPane.showMessageDialog(this, "Thêm thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                }
            } else {
                if (confirm == JOptionPane.YES_OPTION) {
                    for (LichThi lich : listLichThi) {
                        if (lich.equals(lichthi)) {
                            lich.themHS(searchHS.getMaHS());
                        }
                    }
                    txtMaSV.setText("");
                    searchHS = null;
                    JOptionPane.showMessageDialog(this, "Thêm thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                }
            }
            showTableData();
            tsScreen.showTableDataTS();
            try {
                writeFile(fileName, listLichThi);
            } catch (Exception ex) {
                System.out.println(ex.toString());
            }
        }
    }//GEN-LAST:event_btnThemThiSinh1ActionPerformed

    private void btnHuyThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyThemActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnHuyThemActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        this.dispose();
        this.setDefaultCloseOperation(this.DO_NOTHING_ON_CLOSE);
    }//GEN-LAST:event_formWindowClosing

    private void txtMaSVKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaSVKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.searchHS = searchHSbYId(txtMaSV.getText());
            if (txtMaSV.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(this, "Nhập mã sinh viên để tìm kiếm!", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            } else {
                if (searchHS == null) {
                    JOptionPane.showMessageDialog(this, "Không có sinh viên này hoặc đã có trong lịch thi!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                } else {
                    searchTable(txtMaSV.getText());
                }
            }
        }
    }//GEN-LAST:event_txtMaSVKeyPressed
    private void showTableData() {
        tbHocSinh.setRowCount(0);
        List<HocSinh> listShow = new ArrayList<>();
        listShow = listHS;
        List<HocSinh> listExists = new ArrayList<>();
        for (int i = 0; i < listMHS.size(); i++) {
            listExists.add(getListSVById(listHS, listMHS.get(i)));
        }
        listShow.removeAll(listExists);
        for (HocSinh hs : listShow) {
            tbHocSinh.addRow(new Object[]{hs.getMaHS(), hs.getHoTen(), hs.getGioiTinh(), hs.getLop(), hs.getCongTacDoan()});
        }
    }

    private HocSinh searchHSbYId(String MaHS) {
        HocSinh sv = new HocSinh();
        for (int i = 0; i < listHS.size(); i++) {
            sv = getListSVById(listHS, MaHS);
        }
        return sv;
    }

    private void searchTable(String MaSV) {
        tbHocSinh.setRowCount(0);
        HocSinh sv = new HocSinh();
        sv = searchHSbYId(MaSV);
        if (sv != null) {
            tbHocSinh.addRow(new Object[]{sv.getMaHS(), sv.getHoTen(), sv.getGioiTinh(), sv.getLop(), sv.getCongTacDoan()});
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThemThiSinhGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThemThiSinhGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThemThiSinhGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThemThiSinhGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ThemThiSinhGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHuyThem;
    private javax.swing.JButton btnThemThiSinh1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableHocSinh;
    private javax.swing.JTextField txtMaSV;
    // End of variables declaration//GEN-END:variables
}
